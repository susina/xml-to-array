<?php declare(strict_types=1);
/*
 * Copyright (c) Cristiano Cinotti 2024.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

use org\bovigo\vfs\vfsStream;
use Susina\XmlToArray\FileConverter;

it('converts an XML file to an array', function (string $xml, array $expected) {
    $file = vfsStream::newFile("test_file.xml")->at($this->getRoot())->setContent($xml);
    $actual = FileConverter::create()->convert($file->url());

    expect($expected)->toBe($actual);
})->with('Xml');

it('try to convert a not existent file', function () {
    $converter = new FileConverter();
    $converter->convert('vfs://root/notexistent.xml');
})->throws(\RuntimeException::class, 'The file `vfs://root/notexistent.xml` does not exist.');

it('try to convert a not readable file', function () {
    $file = vfsStream::newFile('notreadable.xml', 200)->at($this->getRoot())->setContent("<root></root>");
    FileConverter::create()->convert($file->url());
})->throws(\RuntimeException::class, 'The file `vfs://root/notreadable.xml` is not readable: do you have the correct permissions?');

it('converts an xml file into an array and save to a file', function (string $xml, array $expected, string $content) {
    $xmlFile = vfsStream::newFile('xml_file.xml')->at($this->getRoot())->setContent($xml);
    $saveFile = vfsStream::newFile('saved_file.php')->at($this->getRoot());

    FileConverter::create()->convertAndSave($xmlFile->url(), $saveFile->url());

    $actual = include($saveFile->url());

    expect($actual)->toBe($expected)
        ->and($content)->toBe($saveFile->getContent());
})->with([
    ["<?xml version='1.0' standalone='yes'?>
<movies>
 <movie>
  <title>Star Wars</title>
  <starred>True</starred>
  <percentage>32.5</percentage>
 </movie>
 <movie>
  <title>The Lord Of The Rings</title>
  <starred>false</starred>
 </movie>
</movies>
",
    [
        'movie' => [
            0 => ['title' => 'Star Wars', 'starred' => true, 'percentage' => 32.5],
            1 => ['title' => 'The Lord Of The Rings', 'starred' => false]
        ]
    ],
    "<?php declare(strict_types=1);
/*
 * This file is auto-generated by susina/xml-to-array library.
 */

return array (
  'movie' => 
  array (
    0 => 
    array (
      'title' => 'Star Wars',
      'starred' => true,
      'percentage' => 32.5,
    ),
    1 => 
    array (
      'title' => 'The Lord Of The Rings',
      'starred' => false,
    ),
  ),
);
"
    ]
]);

it('converts an xml string and save to a file, creating it', function (string $xml, array $expected, string $content) {
    $xmlFile = vfsStream::newFile('xml_file.xml')->at($this->getRoot())->setContent($xml);
    FileConverter::create()->convertAndSave($xmlFile->url(), $this->getRoot()->url() . '/save_file.php');
    expect('vfs://root/save_file.php')->toBeFile();

    $actual = include('vfs://root/save_file.php');

    expect($actual)->toBe($expected)
        ->and($content)->toBe(file_get_contents('vfs://root/save_file.php'));
})->with([
    ["<?xml version='1.0' standalone='yes'?>
<movies>
 <movie>
  <title>Star Wars</title>
  <starred>True</starred>
  <percentage>32.5</percentage>
 </movie>
 <movie>
  <title>The Lord Of The Rings</title>
  <starred>false</starred>
 </movie>
</movies>
",
    [
        'movie' => [
            0 => ['title' => 'Star Wars', 'starred' => true, 'percentage' => 32.5],
            1 => ['title' => 'The Lord Of The Rings', 'starred' => false]
        ]
    ],
    "<?php declare(strict_types=1);
/*
 * This file is auto-generated by susina/xml-to-array library.
 */

return array (
  'movie' => 
  array (
    0 => 
    array (
      'title' => 'Star Wars',
      'starred' => true,
      'percentage' => 32.5,
    ),
    1 => 
    array (
      'title' => 'The Lord Of The Rings',
      'starred' => false,
    ),
  ),
);
"
    ]
]);

it('try to save in a not existent directory', function () {
    $xmlFile = vfsStream::newFile('xml_file.xml')
        ->at($this->getRoot())
        ->setContent("<movies><movie><title>The Lord Of The Rings</title><starred>false</starred></movie></movies>");
    $converter = new FileConverter();
    $converter->convertAndSave($xmlFile->url(), $this->getRoot()->url() . '/my_dir/my_array.php');
})->throws(\RuntimeException::class, "The directory `vfs://root/my_dir` does not exist: you should create it before writing a file.");

it('try to save in a not writeable directory', function () {
    $dir = vfsStream::newDirectory('xml_dir', 000)->at($this->getRoot());
    $xmlFile = vfsStream::newFile('xml_file.xml')
        ->at($this->getRoot())
        ->setContent("<movies><movie><title>The Lord Of The Rings</title><starred>false</starred></movie></movies>");
    FileConverter::create()->convertAndSave($xmlFile->url(), $dir->url() . '/my_array.php');
})->throws(\RuntimeException::class, "It's impossible to write into `vfs://root/xml_dir` directory: do you have the correct permissions?");
